(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{485:function(e,t,s){"use strict";s.r(t);var a=s(53),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"simple-url-request"}},[e._v("Simple URL Request")]),e._v(" "),s("h2",{attrs:{id:"overview"}},[e._v("Overview")]),e._v(" "),s("p",[e._v("Many changes have been made to the iOS development API over the years. One technology that has been created in this process is how you make URL requests to a server. The current process requires that you make an URLRequest using a class called "),s("strong",[e._v("URLSession")]),e._v(".")]),e._v(" "),s("p",[e._v("For a simple example of how to make a URL request, we have a textLabel and a button. When the button is pressed, this application will make a request to the server and then take the response and output it in the textLabel.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/F2020/assets/img/SimpleURLRequest_1.png",alt:"Simple URL Request"}})]),e._v(" "),s("p",[e._v("The code in the viewController does nothing in the viewDidLoad function. The button is connected to the loadButton action function.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/F2020/assets/img/SimpleURLRequest_2.png",alt:"Simple URL Request"}})]),e._v(" "),s("h2",{attrs:{id:"make-a-url-request"}},[e._v("Make a URL Request")]),e._v(" "),s("p",[e._v("In the button action, you can see how to make a URL object and how to pass it to a URLRequest object. Then, a URLSession object is created and a task is generated by passing the request object to the "),s("strong",[e._v("session.dataTask()")]),e._v(" method, along with the function that will manage the request: the "),s("strong",[e._v("requestTask")]),e._v(" function.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("You can pass the name of a function to the "),s("strong",[e._v("completionHandler")]),e._v(", or write a "),s("RouterLink",{attrs:{to:"/modules/week3/functions.html"}},[e._v("Closure")]),e._v(" (an inline block of code) that manages the handling of the request task.")],1)]),e._v(" "),s("h2",{attrs:{id:"handling-the-request-task"}},[e._v("Handling the Request Task")]),e._v(" "),s("p",[e._v("The next function is the requestTask that you must define with three optional parameters. The first parameter is an optional Data object that will hold the data sent back from the server if everything works. The second parameter is an optional URLResponse that holds the request status. The last parameter is an optional error object that will be set if an error occurred when making the request.")]),e._v(" "),s("p",[e._v("Within this function, you must check if the error object was set: if it was set, then an error occurred and you must call the callback function passing in an empty string as the response data and the server error as the second parameter. If the error is set to nil, then the request has succeeded in getting a response. If there is no error, you must call the callback function passing in the response data and nil as the server error. This callback function will be run on a background thread while it is processing the server's response.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("You can choose to write all of your callback functionality write in your requestTask, or write a separate callback function that gets called in your requestTask.")])]),e._v(" "),s("h2",{attrs:{id:"successful-request-task-callback-function"}},[e._v("Successful Request Task Callback Function")]),e._v(" "),s("p",[e._v("The last function is the callback function that takes two strings as its parameters. The first is for the response data and the second is an optional for the error, if it exists. Within this function you will see the same pattern where you must first check it an error is passed in. If the error is nil, then you got data back from the server and you can process the response data.")]),e._v(" "),s("p",[e._v("You will then notice that we can not directly modify the textLabel within this function. Because the callback function is launched on a background thread, you "),s("em",[e._v("must")]),e._v(" run any code that will update your UI on the main thread.  This is done by calling the "),s("strong",[e._v("DispatchQueue.main.async()")]),e._v(" method. Within this function you can execute code to update the UI in your view.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("The callback function is launched on a background thread, so you "),s("em",[e._v("must")]),e._v(" run any code that will update your UI on the main thread.")])]),e._v(" "),s("p",[e._v("Here you can  "),s("a",{attrs:{href:"/F2020/assets/downloads/SimpleURLRequest.zip"}},[e._v("download an example project")]),e._v(" that uses a URLRequest to the server.  It receives the JSON data as a response back from the server, processes it, and display the text from the server in a label.  Here you can  "),s("a",{attrs:{href:"/F2020/assets/downloads/SimpleURLRequestServer.zip"}},[e._v("download the php server script")]),e._v("   used with this example.")]),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/modules/week11/#during-class"}},[e._v("Back to Week 11")])],1)])}),[],!1,null,null,null);t.default=o.exports}}]);